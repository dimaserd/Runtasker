@helper GetStringFormatFunction()
{
    <script>
        // First, checks if it isn't implemented yet.
            if (!String.prototype.format) {
                String.prototype.format = function () {
                    var args = arguments;
                    return this.replace(/{(\d+)}/g, function (match, number) {
                        return typeof args[number] != 'undefined'
                            ? args[number]
                            : match
                            ;
                    });
                };
            }
    </script>
}

@helper GetMakeLoadingFunction(bool newSpinner = false)
{
if (newSpinner)
{
        

        <script>
            function MakeLoading(elementId) {
                

                var row = document.createElement("div");
                row.className = "row box200";

                var innerDiv = document.createElement("div");

                innerDiv.id = "loader";

                for (i = 0; i < 9; i++)
                {
                    var dot = document.createElement("div");
                    dot.className = "dot";
                    innerDiv.appendChild(dot)
                }

                var lading = document.createElement("div");
                lading.className = "lading";

                innerDiv.appendChild(lading);

                row.appendChild(innerDiv);

                
                    


                var searchResult = document.getElementById(elementId);

                searchResult.innerHTML = "";

                searchResult.appendChild(row);

            }
        </script>
}
else
{
        <script>
            function MakeLoading(elementId) {
                var sp = document.createElement("span");
                sp.className = "text-center";

                sp.className = "fa fa-spinner fa-5x fa-spin";

                var searchResult = document.getElementById(elementId);

                searchResult.innerHTML = "";

                searchResult.appendChild(sp);

            }
        </script>
}

}
