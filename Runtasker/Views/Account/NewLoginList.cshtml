@using Runtasker.Resources.Views.Account.NewLoginList

@model Runtasker.Logic.Models.ExternalLoginListModel
@using Microsoft.Owin.Security
@{
    Layout = null;
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0)
    {
         <!-- <a href="http://go.microsoft.com/fwlink/?LinkId=403804">этой статье</a> -->
    }
    else
    {

        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }))
        {
            @Html.AntiForgeryToken()
            foreach (AuthenticationDescription p in loginProviders)
            {

                string caption = p.Caption;
                if (caption.ToLower() == "vkontakte")
                {
                    caption = "vk";
                }
                string className = $"btn-{caption.ToLower()}";
                string className2 = $"fa-{caption.ToLower()}";

                <button type="submit" class="btn btn-lg btn-social-icon @className" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="@NewLoginList.SignUpWith @p.Caption">
                    <span class="fa @className2"></span>
                </button>
            }

        }

    }
}

@Styles.Render("~/Social")
