@using Runtasker.Resources.Views.Orders.MiniPanel
@using Runtasker.Resources.Views.Message.ActivePanel
@{
    Layout = "~/Views/Shared/_EmptyLayout.cshtml";
}

<!-- Top Nav -->
<div id="NavMenu" class="navbar-collapse nav-main-collapse collapse pull-right">
    <nav class="nav-main mega-menu">
        <ul class="nav nav-pills nav-main scroll-menu" id="topMain">
            <li id="ordersMiniPanel" class="dropdown mega-menu-item">
                <a id="orderPanelLink" class="dropdown-toggle" href="#">
                    @MiniPanelRes.MyOrders <i class="fa fa-angle-down hidden-lg hidden-md"></i>
                </a>
                <ul id="orderPanelMenu" class="dropdown-menu">

                </ul>

            </li>

            <li id="messageMiniPanel" class="dropdown mega-menu-item">
                <a class="dropdown-toggle" href="#">
                    <span class="glyphicon glyphicon-envelope"> </span> @ActivePanel.Inbox <span id="unreadCount" class="badge">0</span>
                    <i class="fa fa-angle-down hidden-lg hidden-md"></i>
                </a>
                <ul id="messagePanelMenu" class="dropdown-menu">
                    
                </ul>
            </li>
        </ul>
    </nav>
</div>
<!-- /Top Nav -->

@section scripts{

    @JSHelper.GetStringFormatFunction()

    @JSHelper.GetMakeLoadingFunction()

    <!--Building Scripts-->
    <script>
        document.addEventListener('DOMContentLoaded', function () {

            var GetData = function()
            {
                $.ajax({
                    type: "GET",
                    url: "/api/Menu/GetOrders",
                    data: null,
                    //изменена функция тестируются сообщения
                    success: NewDataGetter,
                });
            }();

            function NewDataGetter(data) {
                MessagesSetter(data);
                OrdersSetter(data);
            }

            function MessagesSetter(data) {

                var ul = document.getElementById("messagePanelMenu");

                if (data.OrderMessageInfos.length != 0) {
                    for (i = 0; i < data.OrderMessageInfos.length; i++) {
                        var li = document.createElement("li");
                        li.appendChild( CreateChatA(data.OrderMessageInfos[i]) );
                        ul.appendChild(li);
                    }

                }
                else {
                    var li = document.createElement("li");
                    li.appendChild(document.createTextNode("@ActivePanel.NoNewMessages"));
                    ul.appendChild(li);
                }
            }

            function OrdersSetter(data)
            {
                var ul = document.getElementById("orderPanelMenu");

                if (data.OrderMessageInfos.length != 0) {

                    for (i = 0; i < data.OrderMessageInfos.length; i++) {
                        if (data.OrderMessageInfos[i].ActionLink != null)
                        {
                            var li = document.createElement("li");

                            li.appendChild(CreateOrderActionLink(data.OrderMessageInfos[i]));

                            ul.appendChild(li);
                        }
                    }

                    //добавляю разделитель
                ul.appendChild(GetDividerLi());


                }

                //элемент для перехода к заказам
                    var ordersLi = document.createElement("li");

                    var ordersA = document.createElement("a");
                    ordersA.href = "/Orders";
                    ordersA.innerHTML = "@ActivePanel.GoToMyOrders";

                    ordersLi.appendChild(ordersA);

                    ul.appendChild(ordersLi);

                    //элемент для добавления заказа
                    var createLi = document.createElement("li");

                    var createA = document.createElement("a");
                    createA.href = "/Orders/Create";
                    createA.innerHTML = "@ActivePanel.CreateNewOrder"

                    createLi.appendChild(createA);

                    ul.appendChild(createLi);

                    //элемент для онлайн помощи
                    var onlineLi = document.createElement("li");

                    var onlineA = document.createElement("a");
                    onlineA.href = "/Orders/OnlineHelp";
                    onlineA.innerHTML = "@ActivePanel.OnlineHelpApplication"

                    onlineLi.appendChild(onlineA);

                    ul.appendChild(onlineLi);

            }

            function GetDividerLi()
            {
                var li = document.createElement("li");

                li.className = "divider";

                return li;
            }

            function CreateOrderActionLink(dataBit)
            {
                var a = document.createElement("a");

                console.log(dataBit);

                a.href = dataBit.ActionLink.Link;
                a.innerHTML = dataBit.ActionLink.Text;

                console.log(dataBit.ActionLink.OpenInModal);
                if (dataBit.ActionLink.OpenInModal == true) {
                    console.log("Зашло");

                    var att = document.createAttribute("link");       // Create a "link" attribute
                    att.value = dataBit.ActionLink.Link;       // Set the value of the link attribute
                    a.setAttributeNode(att);

                    a.addEventListener("click", OrderActionClickHandler);
                    a.href = "#";
                }

                return a;
            }


            function CreateChatA(dataBit) {
                var a = document.createElement("a");

                a.className = "chatLink";
                a.id = dataBit.Id;


                var span = document.createElement("span");
                span.className = "badge";
                span.innerHTML = dataBit.UnreadCount;

                //другой способ
                a.appendChild(document.createTextNode("@ActivePanel.ChatLinkTextFormat".format(dataBit.Id)));
                a.appendChild(span);


                a.addEventListener("click", ChatClickHandler);
                a.href = "#";

                return a;
            }





            //Модал и прочее
            var modalBodyId = "modalBody";
            var modalBody = $('#' + modalBodyId);

            var myModal = $('#myModal');


            //обработчик содержит дуплицит
            function ChatClickHandler() {
                var id = $(this).attr('id');
                myModal.modal('show');
                //показываю крутилку
                MakeLoading(modalBodyId);
                GetModalDataFromMenu(id);
            }

            //обработчик для модала
            function OrderActionClickHandler() {
                console.log("Клик ебаный");
                var link = $(this).attr('link');

                console.log(link);

                myModal.modal('show');
                //показываю крутилку
                MakeLoading(modalBodyId);
                GetModalDataFromLink(link);
            }

            function GetModalDataFromMenu(id) {

                var link = '/Message/ChatAboutOrder/?orderId=' + id;
                GetModalDataFromLink(link);
            }

            function GetModalDataFromLink(link) {

                $.ajax({
                    type: "GET",
                    url: link,
                    contentType: false,
                    processData: false,
                    async: true,
                    data: null,
                    success: function (result) {
                        modalBody.html(result);
                    },
                    error: function (xhr, status, p3) {
                        alert(xhr.responseText);
                    }
                });
            }

        })
    </script>
    <!--/Building Scripts-->

   
<script>
    document.addEventListener('DOMContentLoaded', function () {
        
    });
</script>

}