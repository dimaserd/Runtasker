@using Runtasker.Logic.Models
@using Runtasker.HtmlExtensions
@using Runtasker.Resources.Views.Home.Contact
@using Runtasker.Logic
@model ContactViewModel
@{
    bool? messageSent = ViewData["messageSent"] as bool?;

    string disabled = (messageSent != null && messageSent.Value) ? "disabled" : null;

    
    MvcHtmlString btnfakeSubmit = MvcHtmlString.Create($"<button id=\"fakeBtn\" {disabled} class=\"btn btn-primary btn-lg\">{ContactRes.SendMessage}</button>");

    MvcHtmlString header = MvcHtmlString.Create($"<h2>{ContactRes.htmlHeader1} <strong><em>{ContactRes.htmlHeader2}</em></strong></h2>");

    string Email = "", Name = "";
    if(Request.IsAuthenticated)
    {
        Email = User.Identity.GetEmail();
        Name = User.Identity.GetName();
    }
}
<!-- WRAPPER -->
<div>
    <!--Подключение каптчи-->
    <script src='https://www.google.com/recaptcha/api.js'></script>
    <!--/Подключение каптчи-->

    <!-- PAGE TITLE -->
    <header id="page-title">
        <div class="container">
            <h1>@ContactRes.ContactUs</h1>
            <ul class="breadcrumb">
                <li><a href="@Url.Action("Index","Home")">@ContactRes.HomeNav</a></li>
                <li class="active">@ContactRes.ContactUs</li>
            </ul>
        </div>
    </header>

    <section id="contact" class="container">
        <div class="row">
            <!-- FORM -->
            <div class="col-md-12">
                @header
            
                @using (Html.BeginForm("Contact", "Home", FormMethod.Post, htmlAttributes: new { id = "contactForm", @class = "white-row" }))
                {
                    <div class="row">                        
                        @if (messageSent != null && messageSent.Value)
                        {
                            <div class="alert alert-success fade in fsize16 hide">
                                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                                <strong>@ContactRes.ThankYou!</strong> @ContactRes.MessageSent!
                            </div>
                        }
                        else
                        {
                            @Html.ValidationErrorsToAlerts()
                        }
                        <div id="bigError" class="alert alert-danger">
                            <i class="fa fa-frown-o"></i>
                            <strong id="bigErrorText"></strong>
                        </div>

                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.LabelFor(m => m.FullName)
                                @Html.TextBoxFor(m => m.FullName, htmlAttributes: new {@class="form-control", value = $"{Name}"})
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(m => m.Email)
                                @Html.TextBoxFor(m => m.Email, htmlAttributes: new {@class="form-control", value = $"{Email}"})
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(m => m.PhoneNumber)
                                @Html.TextBoxFor(m => m.PhoneNumber, htmlAttributes: new { @class = "form-control", type = "tel" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.LabelFor(m => m.Subject)
                                @Html.TextBoxFor(m => m.Subject, htmlAttributes: new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.LabelFor(m => m.Message)
                                @Html.TextAreaFor(m => m.Message,
                                htmlAttributes: new { maxlength = "5000", rows = "10",
                                    @class ="form-control", placeholder = ContactRes.MessagePlaceholder
                                })
                            </div>
                        </div>
                    </div>

                    <br />

                    <div class="row">
                        <div class="col-md-12">
                            <span class="pull-right">
                                <!-- captcha -->
                                <div class="g-recaptcha" data-callback="recaptchaCallback" data-sitekey="6LfGJQsUAAAAAD_WIZo3f6v8mb9rJuZzRqZy4v3i"></div>
                                <!--/captcha-->
                             </span>
                            <input type="submit" id="realSubmit" class="hidden" />
                            @btnfakeSubmit
                        </div>
                    </div>
                }

            </div>
            <!-- /FORM -->
        </div>
    </section>
</div>
<!-- /WRAPPER -->

@section scripts{
    <!--Big Error Scripts-->
    <script>
        var bigError = $("#bigError");
        var bigErrorText = $("#bigErrorText")

        function ShowBigError(errorDesc) {
            bigErrorText.html(errorDesc);
            bigError.show();
        }

        function HideBigError() {
            bigError.hide();
        }
    </script>
    <!--/Big Error Scripts-->

    <script>
        HideBigError();

        var fakeBtn = $("#fakeBtn");
        var realSubmit = $("#realSubmit");

        var canSend = false;

        function recaptchaCallback() {
            canSend = true;
        };

        fakeBtn.click(function (e) {
            e.preventDefault();
            if(canSend)
            {
                realSubmit.click();
            }
            else
            {
                ShowBigError("Нажмите на галочку каптчи!")
            }
        })
    </script>
}
