@using Runtasker.Logic.Models.Orders.Pay
@using HtmlExtensions.StaticRenderers
@using Runtasker.HtmlExtensions
@using Runtasker.LocaleBuilders.Models
@model PayOnlineHelp
@{
    LocaleViewModel localeModel = ViewData["localeModel"] as LocaleViewModel;

    ViewBag.Title = localeModel["Title"];

    MvcHtmlString title = MvcHtmlString.Create(localeModel["PayRoublesHtml"]);

}


<header id="page-title">
    <div class="container">
        <h1>@title</h1>
        <ul class="breadcrumb">
            <li><a href="@Url.Action("Index","Home")">@localeModel["HomeNav"]</a></li>
            <li><a href="@Url.Action("Index","Orders")">@localeModel["MyOrdersNav"]</a></li>
            <li class="active">@localeModel["ActiveNav"]</li>
        </ul>
    </div>
</header>

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <!--HalfOfOrderSum-->
        <div class="form-group">
            @Html.ValidationErrorsToAlerts()
            @Html.LabelFor(model => model.Sum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                <div class="input-group input-group-lg">
                    @Html.TextBoxFor(model => model.Sum,
         htmlAttributes: new
         {
             id = "halfOfOrderSum",
             @class = "form-control",
             type = "number",
             value = Model.Sum
         })
                    <span class="input-group-addon">
                        @FASigns.Rouble.ToHtml()
                    </span>
                </div>
            </div>
            @Html.ValidationMessageFor(model => model.Sum, "", new { @class = "text-danger" })
        </div>
        <!--/HalfOfOrderSum-->

        @Html.HiddenFor(model => model.OrderId)
        @Html.HiddenFor(model => model.RequiredSum)

        <button class="btn btn-lg btn-success">@localeModel["ActionBtnText"]</button>
    </div>
}

@section scripts{
    <script>
        var halfOfOrderSum = $("#halfOfOrderSum");

        var changer = function () {
            halfOfOrderSum.val(parseInt("@Model.RequiredSum"));
        }();

        halfOfOrderSum.change(function (e) {
            halfOfOrderSum.val(parseInt(@Model.RequiredSum));
        })
    </script>
}