@using Runtasker.ExtensionsUI.UIExtensions.Orders
@using Runtasker.Logic.Entities
@using HtmlExtensions.StaticRenderers
@using Extensions.String
@using Extensions.Enumerations
@model List<Order>
@{
    ViewBag.Title = "Index";
    Layout = Runtasker.Statics.Views.ViewPaths.NewAdminLayoutPath;

}
        
<div class="row">
    <h1>Заказы на сайте</h1>

    <div class="row">
        <!--Sort Panel-->
        <div class="pull-right">
            <div class="btn-group">
                <ul class="pager">
                    @foreach (OrderStatus status in Enum.GetValues(typeof(OrderStatus)))
                    {
                        int count = Model.Count(x => x.Status == status);

                        if (count > 0)
                        {
                            <li>
                                <a href="#" class="btn active btn-default btn-filter" data-orderStatus="@status.ToString()">
                                    @status.ToDisplayName() @GISigns.Count(count).ToHtml()
                                </a>
                            </li>
                        }
                    }

                    <li>
                        <a href="#" class="btn active btn-default btn-filter" data-orderStatus="all">
                            Все @GISigns.Count(Model.Count()).ToHtml()
                        </a>
                    </li>
                </ul>
            </div>
        </div>
        <!--/Sort Panel-->
    </div>
    
</div>

@Styles.Render("~/OrdersList")
@foreach (Order order in Model)
{
    @MvcHtmlString.Create(new PerformerOrderHtmlEntity(order).ToString())
}

@section scripts{
    <!--Chat Toggler Scripts-->
    <script>
        var chatTogglers = $('.orderChat');

        var modalBody = $('#modalBody');
        var myModal = $('#myModal');

        chatTogglers.click(function (e) {
            e.preventDefault();

            var id = $(this).attr('id');
            myModal.modal('show');
            //$('#chatMenu').collapse('hide');
            GetModalData(id);
        });

        function GetModalData(id)
        {
            $.ajax({
                type: "GET",
                url: '/Performer/ChatAboutOrder/' + id,
                contentType: false,
                processData: false,
                async: true,
                data: null,
                success: function (result) {
                    modalBody.html(result);
                },
                error: function (xhr, status, p3) {
                    alert(xhr.responseText);
                }
            });
        }
    </script>
    <!--/Chat Toggler Scripts-->

    <!--Filter scripts-->
        <script>
        $(document).ready(function () {

            
            var filterBtns = $('.btn-filter');

            filterBtns.on('click', function () {
                var $target = $(this).data('orderstatus');

                filterBtns.removeClass('active');
                $(this).addClass('active');

                if ($target != 'all') {
                    $('.bs-calltoaction').css('display', 'none');
                    $('.bs-calltoaction[data-orderstatus="' + $target + '"]').fadeIn('slow');
                } else {
                    $('.bs-calltoaction').css('display', 'none').fadeIn('slow');
                }
            });



        });
</script>
    <!--/Filter scripts-->
}
        

