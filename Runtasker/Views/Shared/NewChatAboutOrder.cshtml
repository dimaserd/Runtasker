@using Runtasker.Logic.Entities
@using Runtasker.ExtensionsUI.UIExtensions
@using Runtasker.Resources.Views.Shared.Chat
@using Extensions.String
@using Runtasker.Statics.Views
@model IEnumerable<Message>
@{

    Layout = ViewPaths.ModalLayoutPath;

    List<Message> messages;
    if (Model == null)
    {
        messages = null;
    }
    else
    {
        messages = Model.ToList();
    }
    string userGuid = ViewData["userGuid"] as string;
    //нужен хидден для отправки сообщений
    string toGuid = ViewData["toGuid"] as string;
    string senderName = ViewData["senderName"] as string;
    string receiverName = ViewData["receiverName"] as string;
    int orderId = (ViewData["orderId"] as int?).Value;


    string chatWithAboutOrder = string.Format("{0} {1}",
        string.Format(ChatRes.ChatWithFormat, receiverName.GetShortName()),
        string.Format(ChatRes.AboutOrderFormat, orderId).WrapToSpan(new { @class= "hidden-xs" }));

    string chatListId = "chatList";
}

@{ 
    string messageClass = "mes";
    string unreadClass = "unread";
    string sendBtnId = "sendBtn";
    string attachmentsId = "attachments";
    string textInputId = "messageText";
    string soundId = "audioSound";


    string downloadClassName = "fa fa-download";
    string downloadFilesText = "Скачать файлы";

    string colorCode = "#334faf";
}

@Styles.Render("~/Chat")

<!--Chat Body-->
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-primary">
                <div class="panel-heading" style="background-color:@colorCode" id="accordion">
                    <span class="glyphicon glyphicon-comment"></span> @chatWithAboutOrder.ToHtml()
                    <div class="btn-group pull-right">
                        <button id="chevron-down" class="btn btn-default btn-xs">
                            <span class="glyphicon glyphicon-chevron-down"></span>
                        </button>
                    </div>
                </div>
                <div class="panel-collapse collapse" id="collapseOne">
                    <div id="chatbody" class="chatContent" style="border: @colorCode 2px solid;">
                        <ul class="chat" id="@chatListId">
                            @if (messages != null)
                            {
                                foreach (Message m in messages)
                                {
                                    HtmlMessage hm = new HtmlMessage(m, userGuid, senderName, receiverName);
                                    @MvcHtmlString.Create(hm.ToString())
                                }
                            }
                        </ul>
                    </div>
                    <div class="panel-footer" style="border-left: @colorCode 2px solid;border-right: @colorCode 2px solid;border-bottom: @colorCode 2px solid;">
                        <div class="input-group">
                            <input id="@textInputId" type="text" class="form-control input-sm" placeholder="@ChatRes.PlaceHolder" />
                            <span class="input-group-btn">
                                <button class="btn btn-warning btn-sm" id="@sendBtnId">
                                    @ChatRes.Send
                                </button>
                            </span>

                        </div>
                        <!--File downloading-->
                        <p>
                            <input type="file" id="@attachmentsId" multiple />
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
<!--/Chat Body-->


<style type="text/css">
    .unread {
        background-color: rgba(153,217,234, 0.25);
        border-radius: 5px;
    }

    .img-50 {
        width: 50px;
        height : auto;
    }
</style>





<!--AudioSound-->
<audio id="@soundId" src="~/assets/sounds/vk-1-zvuki-mp3.com_.mp3" type="audio/mp3"></audio>
<!--/AudioSound-->

<!--Скрытые поля для чата-->
<!--btn-input btn-send-->
<input id="senderId" type="hidden" value="@userGuid" />
<input id="receiverId" type="hidden" value="@toGuid" />
<input id="senderName" type="hidden" value="@senderName" />
<input id="receiverName" type="hidden" value="@receiverName" />
<input id="attachments" type="hidden"/>
<input id="orderId" type="hidden" value="@orderId"/>
<!--/Скрытые поля для чата-->

<!--Функции скролла-->
<script>
      var chatHidden = true;
        //чат скрыт
        function FocusSetter() {
            $('#@textInputId').focus();
        }

        function ShowHideChatBody() {
            $('#collapseOne').collapse('toggle');
            if (chatHidden) {
                chatHidden = !chatHidden;
                setTimeout(function () { scrollDownChatBody(900) }, 1);
            }
            else {
                chatHidden = !chatHidden;
            }
        }

        $('#chevron-down').on('click', function (e) {
            ShowHideChatBody();
        })

    //проматывает список вниз 
        function scrollDownChatBody(duration) {   //stop()
            $('#chatbody').stop().animate({
                scrollTop: $('#chatbody')[0].scrollHeight,
            }, duration, FocusSetter());
        }
</script>
<!--/Функции скролла-->

<!--Функции аудио-->
<script>
        function PlayAudio()
        {
            document.getElementById('@soundId').play();
        }
</script>
<!--/Функции аудио-->

<!--Message Builder-->
<script>
    function buildMessageFromData(Data)
    {
        console.log("buildMessageFromData");
        console.log(Data);
        buildMessage(Data.Id, Data.Text, Data.Attachmnets, Data.SenderGuid, Data.NickName, Data.Date)
    }

    function buildMessage(id, text, filesUrl, senderGuid, nickname, date) {


        var userGuid = $('#userGuid').val();
        var toGuid = $('#toGuid').val();
        var NickName = nickname;


        function GetStarted() {
            var result = `<li id='${id}' date='${date}' class='@messageClass `;
            if (senderGuid == userGuid) { //сообщение принято?
                result += "right clearfix'><span class='chat-img pull-right ";
            }
            else {
                $('#audioSound').get(0).play();
                result += "@unreadClass left clearfix'><span class='chat-img pull-left ";
            }
            result += " clearfix'>";
            return result;
        }

        function GetNickAndTime() {
            var time = "Just now"
            if (senderGuid != userGuid) {
                return `<strong class='primary-font'>${NickName}</strong>`
                    + "<small class='pull-right text-muted timeSpan'>"
                 + `<span class='glyphicon glyphicon-time'></span>${time}</small>`;
            }
            else {
                return "<small class='text-muted timeSpan'>"
                 + `<span class='glyphicon glyphicon-time'></span>${time}</small>`
                 + `<strong class='pull-right primary-font'>${NickName}</strong>`;
            }
        }

        function GetImage() {
            return `<img src='/File/GetAvatar?userGuid=${senderGuid}' alt='User Avatar'`
                + "class='img-circle img-50'/>";
            
        }

        function GetAttachmentsLink() {
            if (filesUrl != "") {
                if (senderGuid != userGuid) {
                    return "<p class='pull-right'><a href='"
                    + filesUrl + "'>@ChatRes.DownloadFiles<span class='glyphicon glyphicon-cloud-download'></span></a></p>";
                }
                else {
                    return "<p class='pull-left'><a href='"
                     + filesUrl + "'>@ChatRes.DownloadFiles<span class='glyphicon glyphicon-cloud-download'></span></a></p>";
                }
            }
            else {
                return "";
            }
        }

        var result = "";

        result += GetStarted() + GetImage() + "</span><div class='chat-body clearfix'><div class='header'>"
        + GetNickAndTime() + "</div>" + "<p>" + text + "</p>" + GetAttachmentsLink() + "</div></li>";

        return result;

    }
</script>
<!--/Message Builder-->

<!--Построение сообщений-->
<script>
    function buildMessageForChat(message)
    {
        var li = document.createElement("li");

        li.id = message.MessageId;

        //если сообщение отправленное
        if (document.getElementById("senderId").value == message.SenderId)
        {
            li.className = "@messageClass right clearfix";
        }
        else
        {
            li.className = "@messageClass left clearfix";
        }

        li.appendChild(GetAvatarImgInSpan(message));

        li.appendChild(GetMessageDiv(message));

        return li;

    }

    function GetAvatarImgInSpan(message)
    {
        var span = document.createElement("span");

        var img = document.createElement("img");

        //если сообщение отправленное
        if (document.getElementById("senderId").value == message.SenderId) {
            span.className = "chat-img pull-right";

        }
        else {
            span.className = "chat-img pull-left";
        }


        img.src = "/File/GetAvatar?userGuid=" + message.SenderId;
        img.className = "img-circle img-50";

        span.appendChild(img);

        return span;

    }

    function GetMessageDiv(message)
    {
        var div = document.createElement("div");

        div.className = "chat-body clearfix";

        div.appendChild(GetHeaderDiv(message));

        var p = document.createElement("p");

        //если сообщение отправленное
        if (document.getElementById("senderId").value == message.SenderId)
        {
            p.className = "pull-right";
        }
        else
        {
            p.className = "pull-left";
        }

        p.innerText = message.Text;



        div.appendChild(p);

        
        if  (message.AttachmentId !== null)
        {
            div.appendChild(GetFileLinkInP(message));
        }

        return div;

    }

    function GetFileLinkInP(message)
    {
            var pForLink = document.createElement("p");

            //если сообщение отправленное
            if (document.getElementById("senderId").value == message.SenderId) {
                pForLink.className = "pull-left";
            }
            else {
                pForLink.className = "pull-right";
            }

            fileLink = document.createElement("a");
            fileLink.href = "/File/Download?id=" + message.AttachmentId;

            var i = document.createElement("i");
            i.className = "@downloadClassName";
            fileLink.appendChild(i);
            fileLink.appendChild(document.createTextNode("@downloadFilesText"));

            pForLink.appendChild(fileLink);

            return pForLink;
    }

    function GetHeaderDiv(message)
    {
        var div = document.createElement("div");

        div.className = "header";

        div.appendChild(GetSmallWithDate(message));

        //<strong class="pull-right primary-font">Dmitry</strong>

        var str = document.createElement("strong");

        //если сообщение отправленное
        if (document.getElementById("senderId").value == message.SenderId) {
            str.className = "pull-right primary-font";
        }
        else
        {
            str.className = "pull-left primary-font";
        }

        str.innerText = message.SenderName;


        div.appendChild(str);

        return div;
    }

    function GetSmallWithDate(message)
    {
        //<small class="text-muted timeSpan">
        //    <span class="glyphicon glyphicon-time"></span>
        //    NaN/NaN/NaN
        //    </small>

        var small = document.createElement("small");

        var span = document.createElement("span");

        span.className = "glyphicon glyphicon-time";

        small.appendChild(span);

        var time = document.createTextNode(message.FormattedDate);

        small.appendChild(time);


        return small;
    }
</script>
<!--/Построение сообщений-->

<!--Мелкие вспомогательные функции-->
<script>

    //очищает поля
    function ClearInputs()
    {
        $('#@textInputId').val('');
         $("#@attachmentsId").val('');
    }
</script>
<!--/Мелкие вспомогательные функции-->


<!--OrderChatHub-->
<script src="~/Scripts/jquery.signalR-2.2.2.js"></script>
<script src="~/signalr/hubs"></script>


<script>
    var chat = $.connection.newOrderChatHub;

    chat.client.onAddedToGroup = function (groupName)
    {
        console.log(groupName);
    }

    chat.client.onNewMessage = function (data) {
        console.log(data);
        if (document.getElementById(data.MessageId) == undefined )
        {
            document.getElementById("@chatListId").appendChild(buildMessageForChat(data));

            //если сообщение принято играем музыку
            if (document.getElementById("senderId").value != data.SenderId) {
                PlayAudio();
            }
            scrollDownChatBody(900);
        }



    }

    //клиентский обработчик прочитанного сообщения
    chat.client.onMessageRead = function (messageId) {
        console.log("onMessageRead", messageId);

        var message = $("#" + messageId);

        if (message.hasClass("@unreadClass"))
        {
            message.removeClass("@unreadClass");
        }
    }

    $.connection.hub.start()
        .done(function () {
            console.log('Now connected, connection ID=' + $.connection.hub.id);

            //поставлено в надежде вылечить отправку
            chat.server.addToGroup(document.getElementById("senderId").value,
                document.getElementById("receiverId").value);

            //обработчик нажатия кнопки отправить
            $('#@sendBtnId').click(function (e) {
                console.log("клик на отправку")




                var files = document.getElementById('@attachmentsId').files;
                if (files.length > 0) {
                    if (window.FormData !== undefined) {
                        var data = new FormData();

                        for (var x = 0; x < files.length; x++) {
                            data.append("file" + x, files[x]);
                        }

                        ///отправляю аяксом файлы на сервер и ожидаю идентификатор для вложения
                        //чтобы отправить его на сервер
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("UploadFiles", "File")',
                            contentType: false,
                            processData: false,
                            data: data,
                            success: function (result) {

                                console.log("Ajax загрузка файлов id=" + result)

                                var Data = {
                                    SenderId: document.getElementById("senderId").value,
                                    ReceiverId: document.getElementById("receiverId").value,
                                    SenderName: document.getElementById("senderName").value,
                                    ReceiverName: document.getElementById("receiverName").value,
                                    Text: document.getElementById("@textInputId").value,
                                    OrderId: document.getElementById("orderId").value,
                                    AttachmentId: result,
                                }

                                chat.server.sendMessageAboutOrder(Data);

                                //очищение инпутов независимо от ветки отправки
                                ClearInputs();
                            },
                            error: function (xhr, status, p3) {
                                alert(xhr.responseText);
                            }
                        });
                    }
                    else {
                        alert("Браузер не поддерживает загрузку файлов HTML5!");
                    }
                }
                else {
                    var Data = {
                        SenderId: document.getElementById("senderId").value,
                        ReceiverId: document.getElementById("receiverId").value,
                        SenderName: document.getElementById("senderName").value,
                        ReceiverName: document.getElementById("receiverName").value,
                        Text: document.getElementById("@textInputId").value,
                        OrderId: document.getElementById("orderId").value,
                    }

                    chat.server.sendMessageAboutOrder(Data);

                    //очищение инпутов независимо от ветки отправки
                    ClearInputs();
                }


            });

            ///обработчик события когда мышь нахожится на сообщении
            $(document.body).on("mouseenter", ".@messageClass", function () {

                var message = $(this);

                if (message.hasClass("@unreadClass")) {
                    var id = message.attr('id');
                    console.log(id);
                    chat.server.readMessageAboutOrder(id, document.getElementById("senderId").value)
                }

            });

            //обработчик нажатия на не прочитанное сообщение (сделано для мобил так у них нет такого понятия как наведение мыши)
            $(document.body).on("click", ".@messageClass", function () {
                var message = $(this);

                if (message.hasClass("@unreadClass")) {
                    var id = message.attr('id');
                    console.log(id);
                    chat.server.readMessageAboutOrder(id, document.getElementById("senderId").value)
                }
            });
        });



</script>
<!--/OrderChatHub-->


