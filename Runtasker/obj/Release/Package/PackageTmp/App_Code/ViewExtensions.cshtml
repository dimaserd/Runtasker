
@helper GetYandexMetrika()
{
    if (Runtasker.Settings.Settings.AppSetting == Runtasker.Settings.Enumerations.ApplicationSettingType.Production)
    {
            <script type="text/javascript">
        (function (d, w, c) {
            (w[c] = w[c] || []).push(function() {
                try {
                    w.yaCounter41472629 = new Ya.Metrika({
                        id:41472629,
                        clickmap:true,
                        trackLinks:true,
                        accurateTrackBounce:true,
                        webvisor:true
                    });
                } catch(e) { }
            });

            var n = d.getElementsByTagName("script")[0],
                s = d.createElement("script"),
                f = function () { n.parentNode.insertBefore(s, n); };
            s.type = "text/javascript";
            s.async = true;
            s.src = "https://mc.yandex.ru/metrika/watch.js";

            if (w.opera == "[object Opera]") {
                d.addEventListener("DOMContentLoaded", f, false);
            } else { f(); }
        })(document, window, "yandex_metrika_callbacks");
            </script>
            <noscript><div><img src="https://mc.yandex.ru/watch/41472629" style="position:absolute; left:-9999px;" alt="" /></div></noscript>

    }
}


@helper GetDateParseScripts()
{
Runtasker.LocaleBuilders.Enumerations.Lang lang = Runtasker.LocaleBuilders.Statics.LanguageStatic.Language;

switch (lang)
{
    case Runtasker.LocaleBuilders.Enumerations.Lang.Russian:
    <script>
        function parseDate(str) {
            var dmy = str.split('.');
            var date = new Date(dmy[2], dmy[1] - 1, dmy[0])
            return date;
        }
    </script>
        break;

    default:
    <script>
        function parseDate(str) {
            var dmy = str.split('/');
            var date = new Date(dmy[2], dmy[0] - 1, dmy[1])
            return date;
        }
    </script>
            break;
    }
}

@helper GetDateTimeScriptsAndStyles(string dateTimePickerId = null, bool pickTime = false)
{
string langCode = Runtasker.LocaleBuilders.Statics.LanguageStatic.JSLangCode;
if (string.IsNullOrEmpty(dateTimePickerId))
{
    <script>
            $("#datetimepicker1").datetimepicker({
        pickTime: @pickTime.ToString().ToLower(), defaultDate: new Date(),
                minDate: new Date(), language: "@langCode"
            })

    </script>
}
else
{
    <script>

    </script>
}

}

